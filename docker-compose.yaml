version: "3.8"

services:
  microservices_postgesql:
    image: postgres:13-alpine
    container_name: microservices_postgesql
    expose:
      - "5432"
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=warpin_assesment
      - POSTGRES_HOST=5432
    command: -p 5432
    networks: [ "microservices" ]

  node_exporter:
    container_name: node_exporter_container
    restart: always
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks: [ "microservices" ]
  users_service:
    container_name: users_service
    build:
      context: .
      dockerfile: docker/users.Dockerfile
    ports:
      - "8003:8003"
      - "8000:8000"
    volumes:
      - ./:/app
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
    depends_on:
      - node_exporter
      - microservices_postgesql
    networks: [ "microservices" ]

  products_service:
    container_name: products_service
    build:
      context: .
      dockerfile: docker/products.Dockerfile
      args:
        APP_PRODUCT_PORT: ${APP_PRODUCT_PORT}
    ports:
      - "8004:8004"
      - "8001:8001"
    volumes:
      - ./:/app
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
    depends_on:
      - node_exporter
      - microservices_postgesql
    networks: [ "microservices" ]

  transactions_service:
    container_name: transactions_service
    build:
      context: .
      dockerfile: docker/transactions.Dockerfile
    ports:
      - "8005:8005"
      - "8002:8002"
    volumes:
      - ./:/app
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
    depends_on:
      - node_exporter
      - microservices_postgesql
    networks: [ "microservices" ]

volumes:
  mongodb_data_container:

networks:
  microservices:
    name: microservices